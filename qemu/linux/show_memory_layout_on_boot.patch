diff --git a/arch/arm64/mm/init.c b/arch/arm64/mm/init.c
index 481d22c32..1dab7e7c6 100644
--- a/arch/arm64/mm/init.c
+++ b/arch/arm64/mm/init.c
@@ -534,6 +534,55 @@ void __init mem_init(void)
 	 * Check boundaries twice: Some fundamental inconsistencies can be
 	 * detected at build time already.
 	 */
+
+	//show memory segment information at boot time
+
+#define MLK(b, t) b, t, ((t) - (b)) >> 10
+#define MLM(b, t) b, t, ((t) - (b)) >> 20
+#define MLG(b, t) b, t, ((t) - (b)) >> 30
+#define MLK_ROUNDUP(b, t) b, t, DIV_ROUND_UP(((t) - (b)), SZ_1K)
+
+	        pr_notice("Virtual kernel memory layout:\n"
+#ifdef CONFIG_KASAN
+		"    kasan   : 0x%16lx - 0x%16lx   (%6ld GB)\n"
+#endif
+		"    vmalloc : 0x%16lx - 0x%16lx   (%6ld GB)\n"
+#ifdef CONFIG_SPARSEMEM_VMEMMAP
+		"    vmemmap : 0x%16lx - 0x%16lx   (%6ld GB maximum)\n"
+		"              0x%16lx - 0x%16lx   (%6ld MB actual)\n"
+#endif
+		"    fixed   : 0x%16lx - 0x%16lx   (%6ld KB)\n"
+		"    PCI I/O : 0x%16lx - 0x%16lx   (%6ld MB)\n"
+		"    modules : 0x%16lx - 0x%16lx   (%6ld MB)\n"
+		"    memory  : 0x%16lx - 0x%16lx   (%6ld MB)\n"
+		"      .init : 0x%px" " - 0x%px" "   (%6ld KB)\n"
+		"      .text : 0x%px" " - 0x%px" "   (%6ld KB)\n"
+		"      .data : 0x%px" " - 0x%px" "   (%6ld KB)\n",
+#ifdef CONFIG_KASAN
+		MLG(KASAN_SHADOW_START, KASAN_SHADOW_END),
+#endif
+		MLG(VMALLOC_START, VMALLOC_END),
+#ifdef CONFIG_SPARSEMEM_VMEMMAP
+		MLG(VMEMMAP_START,
+		    VMEMMAP_START + VMEMMAP_SIZE),
+		MLM((unsigned long)virt_to_page(PAGE_OFFSET),
+		    (unsigned long)virt_to_page(high_memory)),
+#endif
+		MLK(FIXADDR_START, FIXADDR_TOP),
+		MLM(PCI_IO_START, PCI_IO_END),
+		MLM(MODULES_VADDR, MODULES_END),
+		MLM(PAGE_OFFSET, (unsigned long)high_memory),
+		MLK_ROUNDUP(__init_begin, __init_end),
+		MLK_ROUNDUP(_text, _etext),
+		MLK_ROUNDUP(_sdata, _edata));
+
+#undef MLK
+#undef MLM
+#undef MLK_ROUNDUP
+		pr_notice(".text segment va (0x%lx)-(0x%lx)\n", _stext, _etext);
+		pr_notice(".text segment pa (0x%lx)-(0x%lx)\n", (unsigned long)__virt_to_phys(_stext), (unsigned long)__virt_to_phys(_etext));
+
+
 #ifdef CONFIG_COMPAT
 	BUILD_BUG_ON(TASK_SIZE_32 > DEFAULT_MAP_WINDOW_64);
 #endif
